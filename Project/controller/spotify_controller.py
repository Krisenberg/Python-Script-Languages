import os
import base64
from requests import post, get
import json
from dotenv import load_dotenv
import random
load_dotenv()
client_id = os.getenv("CLIENT_ID")
client_secret = os.getenv("CLIENT_SECRET")

def get_token():
    auth_string = client_id + ":" + client_secret
    auth_bytes = auth_string.encode("utf-8")
    auth_base64 = str(base64.b64encode(auth_bytes), "utf-8")

    url = "https://accounts.spotify.com/api/token"
    headers = {
        "Authorization" : "Basic " + auth_base64,
        "Content-Type" : "application/x-www-form-urlencoded"
    }
    data = {"grant_type" : "client_credentials"}
    result = post(url, headers=headers, data=data)
    json_result = json.loads(result.content)
    token = json_result["access_token"]
    return token

def get_auth_header(token):
    return {"Authorization": "Bearer " + token}

def get_user_id(token):
    url = "https://api.spotify.com/v1/me"
    header = get_auth_header(token)
    result = get(url, headers=header)
    json_result = json.loads(result.content)
    return json_result

def search_for_artist(token, artist_name):
    url = "https://api.spotify.com/v1/search"
    headers = get_auth_header(token)
    query = f"?q={artist_name}&type=artist&limit=1"

    query_url = url + query
    result = get(query_url, headers=headers)
    json_result = json.loads(result.content)["artists"]["items"]
    return json_result[0]

def get_songs_by_artist(token, artist_id):
    url = f"https://api.spotify.com/v1/artists/{artist_id}/top-tracks?country=US"
    headers = get_auth_header(token)
    result = get(url, headers=headers)
    json_result = json.loads(result.content)["tracks"]
    return json_result

def search_for_tracks(token, year, limit, market):
    url = "https://api.spotify.com/v1/search"
    headers = get_auth_header(token)
    query = f"?q=year%3A{year}&type=track&limit={limit}&market={market}"

    query_url = url + query
    result = get(query_url, headers=headers)
    json_result = json.loads(result.content)["tracks"]["items"]
    return json_result

def create_playlist(token, user_id, is_public):

    # url = f"https://api.spotify.com/v1/users/{user_id}/playlists"
    url = f"https://api.spotify.com/v1/me/playlists"

    headers = {
        "Authorization" : "Bearer " + token,
        "Content-Type" : "application/json"
    }

    data = {
    "name": "PlayMe"+str(random.randint(1,5000)),
    "description": "Playlist generated by PlayMe App",
    "public": is_public
    }
    result = post(url, headers=headers, data=data)
    json_result = json.loads(result.content)
    return json_result

# def get_top_data(token, artist_id):
#     url = f"https://api.spotify.com/v1/artists/{artist_id}/top-tracks?country=US"
#     headers = get_auth_header(token)
#     result = get(url, headers=headers)
#     json_result = json.loads(result.content)["tracks"]
#     return json_result

# def create_playlist_from_top_tracks(year_start, year_end, limit, market):
#     tracks = []
#     for year in range(year_start, year_end+1):
#         tracks.append(get_top_data(year, 'track', limit, market))

#     tracks_uris = []
#     for track_list in tracks:
#         if 'items' in track_list:
#             for track in track_list['items']:
#                 if 'uri' in track:
#                     tracks_uris.append(track['uri'])
#     playlist = sp.user_playlist_create(user=sp.current_user()['id'], name=f'Top Tracks Playlist({year_start, year_end})', public=True)

#     sp.playlist_add_items(playlist_id=playlist['id'], items=tracks_uris)
#     playlist_link = playlist['external_urls']['spotify']

#     return playlist_link

token = get_token()
result = search_for_tracks(token, 2022, 2, 'PL')
# result = search_for_artist(token, "Vito Bambino")
# artist_id = result["id"]
# songs = get_songs_by_artist(token, artist_id)

for idx, song in enumerate(result):
    print(f"{idx + 1}. {song['uri']}")
# id = get_user_id(token)
print(create_playlist(token, 'qmatix', False))
